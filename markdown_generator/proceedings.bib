%*******************************************
% ABBREVIATIONS FOR CONFERENCE PROCEEDINGS *
%*******************************************

@string{VTC = "Proc. IEEE Vehicular Technology Conference (VTC)"}
@string{CDC = "Proc. Control and Decision Conference (CDC)"}
@string{CCS = "Proc. ACM SIGSAC Conference on Computer and Communications Security (CCS)"}
@string{PIMRC = "Proc. PIMRC"}
@string{DATE = "Proc. DATE"}
@string{INFOCOM = "Proc. IEEE Int. Conference on Computer Communications (INFOCOM)"}
@string{IPSN = "Proc. IEEE/ACM IPSN"}
@string{ICNP = "Proc. IEEE ICNP"}
@string{ICN = "Proc. ACM ICN"}
@string{CONEXT = "Proc. ACM Int. Conference on emerging Networking EXperiments and Technologies (CoNEXT)"}
@string{MOBICOM = "Proc. ACM Int. Conference on Mobile Computing and Networking (MobiCom)"}
@string{WINTECH = "Proc. ACM WiNTECH"}
@string{SIGMETRICS = "Proc. ACM SIGMETRICS"}
@string{SIGCOMM = "Proc. ACM SIGCOMM"}
@string{SENSYS = "Proc. ACM SenSys"}
@string{MOBIHOC = "Proc. ACM MobiHoc"}
@string{MOBISYS = "Proc. ACM Int. Conference on Mobile Systems, Applications, and Services (MobiSys)"}
@string{DYSPAN = "Proc. IEEE DySPAN"}
@string{HOTNETS = "Proc. ACM HotNets"}
@string{HOTSDN = "Proc. ACM HotSDN"}
@string{EUROCRYPT = "Proc. Annual International Conference on the Theory and Applications of Cryptographic Techniques (EUROCRYPT)"}
@string{EUROSP = "Proc. IEEE European Symposium on Security and Privacy (EuroS\&P)"}

@string{ICC = "Proc. IEEE ICC"}
@string{PRIB = "Proc. PRIB"}
@string{WIOPT = "Proc. WiOPT"}
@string{SECON = "Proc. IEEE SECON"}
@string{OSDI = "Proc. OSDI"}
@string{WWW = "Proc. of the International Web Conference (WWW)"}
@string{NSDI = "Proc. USENIX Symposium on Networked Systems Design and Implementation (NSDI)"}
@string{USENIX = "Proc. USENIX"}
@string{USENIXSEC = "Proc. USENIX Security Symposium"}
@string{GLOBECOM = "Proc. GLOBECOM"}
@string{MILCOM = "Proc. MILCOM"}
@string{ITC = "Proc. Int. Teletraffic Congress (ITC)"}
@string{MOMUC = "Proc. Int. Workshop on Mobile Multimedia Communications (MoMuC)"}
@string{WCNC = "Proc. IEEE Wireless Communications and Networking Conference (WCNC)"}
@string{CISS="Proc. IEEE Conference on Information Sciences and Systems (CISS)"}
@string{ALLERTON="Proc. Annual Allerton Conference On Communication, Control and Computing"}
@string{IWQOS="Proc. IEEE Int. Workshop on Quality of Service (IWQoS)"}
@string{ISCC="Proc. Int. Symposium on Computer Communications (ISCC)"}
@string{PERCOM="Proc. IEEE Conference on Pervasive Computing and Communications (PerCom)"}
@string{OAKLAND="Proc. IEEE Symposium on Security and Privacy (S\&P)"}
@string{IMC="Proc. ACM Int. Measurement Conference (IMC)"}
@string{WICON="Proc. Int. Conference on Wireless Internet (WICON)"}
@string{ITA="Proc. Information Theory and Applications Workshop (ITA)"}
@string{ANCS="Proc. IEEE/ACM ANCS"}
@string{ICFP="Proc. ACM ICFP"}
@string{SANE="Proc. SANE"}
@string{GI="Proc. IEEE Global Internet Symposium (GI)"}
@string{NDSS="Proc. Network and Distributed System Security Symposium (NDSS)"}
@string{PAM="Proc. Passive and Active Measurement (PAM)"}
@string{DSN="Proc. IEEE/IFIP Int. Conference on Dependable Systems and Networks (DSN)"}
@string{TMA="Proc. Network Traffic Measurement and Analysis Conference (TMA)"}

%***********************************
% ABBREVIATIONS FOR JOURNAL PAPERS *
%***********************************

@string{JSAC="IEEE Journal on Selected Areas in Communications"}
@string{BALTZER="ACM Baltzer Journal of Wireless Networks"}
@string{TIT = "IEEE Transactions on Information Theory"}
@string{TON="IEEE/ACM Transactions on Networking"}
@string{TCOMM="IEEE Transactions on Communications"}
@string{TCOMP="IEEE Transactions on Computers"}
@string{SIAMCOMP="SIAM Journal of Computing"}
@string{TAC="IEEE Transactions on Automatic Control"}
@string{TMC="IEEE Transactions on Mobile Computing"}
@string{COMNET="Computer Networks"}
@string{TWC="IEEE Transactions on Wireless Communications"}
@string{COMLET="IEEE Communications Letters"}
@string{CCR="ACM SIGCOMM Computer Communication Review"}
@string{INET="IEEE Network"}

@InProceedings{scheitle2016matador,
    author="Scheitle, Quirin and Wachs, Matthias and Zirngibl, Johannes and Carle, Georg",
    title="Analyzing Locality of Mobile Messaging Traffic using the MATAdOR Framework",
    booktitle=PAM,
    year="2016",
    month=3,
    day=24,
    file = {2016-matador-pam.pdf},
    data=  {https://mediatum.ub.tum.de/1445929},
    homepage = {http://net.in.tum.de/pub/mobmes/},
    url = {https://link.springer.com/chapter/10.1007/978-3-319-30505-9_15},
    abstract="Mobile messaging services have gained a large share in global telecommunications. Unlike conventional services like phone calls, text messages or email, they do not feature a standardized environment enabling a federated and potentially local service architecture. We present an extensive and large-scale analysis of communication patterns for four popular mobile messaging services between 28 countries and analyze the locality of communication and the resulting impact on user privacy. We show that server architectures for mobile messaging services are highly centralized in single countries. This forces messages to drastically deviate from a direct communication path, enabling hosting and transfer countries to potentially intercept and censor traffic. To conduct this work, we developed a measurement framework to analyze traffic of such mobile messaging services. It allows to carry out automated experiments with mobile messaging applications, is transparent to those applications and does not require any modifications to the applications.",
}

@inproceedings{sosnowski2022tlsfingerprinting,
	author = {Sosnowski, Markus and Zirngibl, Johannes and Sattler, Patrick and Carle, Georg and Grohnfeldt, Claas and Russo, Michele and Sgandurra, Daniele},
	title = {{Active TLS Stack Fingerprinting: Characterizing TLS Server Deployments at Scale}},
	booktitle = TMA,
	year = {2022},
    month = {June},
    day={27},
    file = {sosnowski2022tlsfingerprinting.pdf},
    abstract = {Active measurements can be used to collect server characteristics on a large scale. This kind of metadata can help discovering hidden relations and commonalities among server deployments offering new possibilities to cluster and classify them. As an example, identifying a previously-unknown cybercriminal infrastructures can be a valuable source for cyber-threat intelligence. We propose herein an active measurement-based methodology for acquiring Transport Layer Security (TLS) metadata from servers and leverage it for their fingerprinting. Our fingerprints capture the characteristic behavior of the TLS stack primarily caused by the implementation, configuration, and hardware support of the underlying server. Using an empirical optimization strategy that maximizes information gain from every handshake to minimize measurement costs, we generated 10 general-purpose Client Hellos used as scanning probes to create a large database of TLS configurations used for classifying servers. We fingerprinted 28 million servers from the Alexa and Majestic toplists and two Command and Control (C2) blocklists over a period of 30 weeks with weekly snapshots as foundation for two long-term case studies: classification of Content Delivery Network and C2 servers. The proposed methodology shows a precision of more than 99 % and enables a stable identification of new servers over time. This study describes a new opportunity for active measurements to provide valuable insights into the Internet that can be used in security-relevant use cases.},
    homepage = {https://active-tls-fingerprinting.github.io/},
    data = {https://doi.org/10.14459/2022mp1658435},
    url = {https://tma.ifip.org/2022/wp-content/uploads/sites/11/2022/06/tma2022-paper35.pdf},
}

@inproceedings{sosnowski2023dissectls,
  author = {Sosnowski, Markus and Zirngibl, Johannes and Sattler, Patrick and Carle, Georg},
  title = {{DissecTLS: A Scalable Active Scanner for TLS Server Configurations, Capabilities, and TLS Fingerprinting}},
  booktitle = PAM,
  year = {2023},
  month = {March},
  day={10},
  doi = {10.1007/978-3-031-28486-1_6},
  abstract = {Collecting metadata from Transport Layer Security (TLS) servers on a large scale allows to draw conclusions about their capabilities and configuration. This provides not only insights into the Internet but it enables use cases like detecting malicious Command and Control (C&C) servers. However, active scanners can only observe and interpret the behavior of TLS servers, the underlying configuration and implementation causing the behavior remains hidden. Existing approaches struggle between resource intensive scans that can reconstruct this data and light-weight fingerprinting approaches that aim to differentiate servers without making any assumptions about their inner working. With this work we propose DissecTLS, an active TLS scanner that is both light-weight enough to be used for Internet measurements and able to reconstruct the configuration and capabilities of the TLS stack. This was achieved by modeling the parameters of the TLS stack and derive an active scan that dynamically creates scanning probes based on the model and the previous responses from the server. We provide a comparison of five active TLS scanning and fingerprinting approaches in a local testbed and on toplist targets. We conducted a measurement study over nine weeks to fingerprint C&C servers and analyzed popular and deprecated TLS parameter usage. Similar to related work, the fingerprinting achieved a maximum precision of 99 % for a conservative detection threshold of 100 %; and at the same time, we improved the recall by a factor of 2.8.},
  isbn = {978-3-031-28486-1},
  homepage = {https://dissectls.github.io/},
  data = {https://doi.org/10.14459/2023mp1695491},
}

@inproceedings{steger2023targetacquired,
  title = {{Target Acquired? Evaluating Target Generation Algorithms for IPv6}},
  author = {Steger, Lion and Kuang, Liming and Zirngibl, Johannes and Carle, Georg and Gasser, Oliver},
  booktitle = TMA,
  file = {steger2023targetacquired.pdf},
  year = {2023},
  month = jun,
  day={29},
  abstract = {Internet measurements are a crucial foundation of IPv6-related research. Due to the infeasibility of full address space scans for IPv6 however, those measurements rely on collections of reliably responsive, unbiased addresses, as provided e.g., by the IPv6 Hitlist service. Although used for various use cases, the hitlist provides an unfiltered list of responsive addresses, the hosts behind which can come from a range of different networks and devices, such as web servers, customer-premises equipment (CPE) devices, and Internet infrastructure.
In this paper, we demonstrate the importance of tailoring hitlists in accordance with the research goal in question. By using PeeringDB we classify hitlist addresses into six different network categories, uncovering that 42% of hitlist addresses are in ISP networks. Moreover, we show the different behavior of those addresses depending on their respective category, e.g., ISP addresses exhibiting a relatively low lifetime. Furthermore, we analyze different Target Generation Algorithms (TGAs), which are used to increase the coverage of IPv6 measurements by generating new responsive targets for scans. We evaluate their performance under various conditions and find generated addresses to show vastly differing responsiveness levels for different TGAs},
  homepage = {https://ipv6hitlist.github.io/},
  data = {https://doi.org/10.14459/2023mp1709953},
  url = {https://tma.ifip.org/2023/wp-content/uploads/sites/12/2023/06/tma2023-final50.pdf}
}

@inproceedings{franzen2022lookingfohoney,
	author = {Franzen, Fabian and Steger, Lion and Zirngibl, Johannes and Sattler, Patrick},
	title = {{Looking for Honey Once Again: Detecting RDP and SMB Honeypots on the Internet}},
	booktitle = {International Workshop on Traffic Measurements for Cybersecurity 2022},
	year = {2022},
    month = {June},
    day = {6},
    file= {wtmc2022lookingforhoney.pdf},
    url = {https://doi.org/10.1109/EuroSPW55150.2022.00033},
    abstract= {Honeypots are a widely used technique to observe the spread of malware and the emergence of new exploits. Attackers try to avoid connecting to honeypots as they reveal the attacker's methods, tools, and exploits. While different honeypot implementations have been fingerprinted in the past, we see a lack of studies covering Windows-related protocols such as Remote Desktop Protocol (RDP) and Server Message Block (SMB) honeypots. However, these protocols have seen at least two major security vulnerabilities in the past 5 years and are commonly exploited. We adapted existing fingerprinting algorithms to allow an accurate identification of RDP and SMB honeypots checking how implementations behave in error conditions. We present a new improvement, namely the inclusion of system TLS stack features previously not used for honeypot detection. We are the first to perform an internet-wide scan searching for RDP and SMB honeypots. We are able to effectively uncover the
            presence of two common open-source honeypots for RDP and SMB each. We identified 84 instances of Heralding (RDP), 1123 instances of RDPY (RDP), 60 instances of Impacket (SMB), and 1461 instances of Dionaea (SMB) during our scans. Furthermore, we found several hosts, which do not use Microsoft's SChannel TLS stack, but advertise themselves as Windows machines. This indicates the presence of a Man-in-the-Middle (MitM) box and could be a sign of a honeypot. Eventually, we analyzed how
            attackers interact with detectable honeypots. We deployed instances of RDP honeypots ourselves and found that credential guessing attackers seem to avoid them. This proves that RDP and SMB honeypots are finger-printable and that even MitM-box-based high-interaction honeypots leave detectable traces.},
}

@inproceedings{zirngibl2023svcb,
  author = {Zirngibl, Johannes and Sattler, Patrick and Carle, Georg},
  title = {{A First Look at SVCB and HTTPS DNS Resource Records in the Wild}},
  booktitle = {International Workshop on Traffic Measurements for Cybersecurity 2023},
  year = {2023},
  month = {July},
  day = {7},
  file = {zirngibl2023svcb.pdf},
  abstract={The Internet Engineering Task Force is standardizing new DNS resource records, namely SVCB and HTTPS. Both records inform clients about endpoint and service properties such as supported application layer protocols, IP address hints or Encrypted Client Hello (ECH) information. Therefore, they allow clients to reduce required DNS queries and potential retries during connection establishment and thus help to improve the quality of experience and privacy of the client. The latter is achieved by reducing visible meta-data, which is further improved with encrypted DNS and ECH. 
      The standardization is in its final stages and companies announced support, e.g., Cloudflare and Apple. Therefore, we provide the first large-scale overview of actual record deployment by analyzing more than 400 M domains. We find 3.96 k SVCB and 10.5 M HTTPS records. As of March 2023, Cloudflare hosts and serves most domains, and most records only contain Application-Layer Protocol Negotiation (ALPN) and IP address hints. Besides Cloudflare, we see adoption by a variety of authoritative name servers and hosting providers indicating increased adoption in the near future. Lastly, we can verify the correctness of records for more than 93% of domains based on three application layer scans.},
}

@misc{muecke2022waitingforquic,
	url = {https://arxiv.org/abs/2209.00965},
	author = {Mücke, Jonas and Nawrocki, Marcin and Hiesgen, Raphael and Sattler, Patrick and Zirngibl, Johannes and Carle, Georg and Schmidt, Thomas C. and Wählisch, Matthias},
	title = {{Waiting for QUIC: On the Opportunities of Passive Measurements to Understand QUIC Deployments}},
	publisher = {arXiv},
	year = {2022},
    month = {September},
    day = {2},
    abstract = {In this paper, we study the potentials of passive measurements to
gain advanced knowledge about QUIC deployments. By analyzing one month backscatter traffic of the /9 CAIDA network telescope, we are able to make the following observations. First, we can
identify different off-net deployments of hypergiants, using packet
features such as QUIC source connection IDs (SCID), packet coalescence, and packet lengths. Second, Facebook and Google configure
significantly different retransmission timeouts and maximum number of retransmissions. Third, SCIDs allow further insights into load
balancer deployments such as number of servers per load balancer.
We bolster our results by active measurements.},
}


